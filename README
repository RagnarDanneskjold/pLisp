Features currently supported:

1. Basic operators like CAR, CDR, and other language primitives (cf. Paul Graham's 'Roots of Lisp')
2. Other operators and utility functions written in pLisp itself (there is a rudimentary library at present)
3. Exception handling in the form of '(try .. (catch ..) ..)
4. Garbage collection
5. Foreign function interface
6. Ability to store and load images (aka serialization)
7. Macros
8. A rudimentary debugger (break, resume, inspect variables)
9. A package system
10. Continuations
11. A basic but complete object system that supports inheritance, encapsulation, etc.
12. Graphical IDE

TODO list:

1. Enhancements to the core library
2. Compiler

pLisp uses these external libraries:

1. libffi (http://sourceware.org/libffi/) for the foreign function interface
2. Emin Martinian's Red Black Tree code (http://web.mit.edu/~emin/www.old/source_code/red_black_tree/index.html)
   in the GC implementation

http://shikantaza.blogspot.in/2013/04/building-lisp-interpreter-from-scratch.html has some documentation and implementation notes.